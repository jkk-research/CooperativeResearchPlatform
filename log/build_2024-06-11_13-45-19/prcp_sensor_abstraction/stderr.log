[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/worldAbstraction.cpp:[m[K In member function â€˜[01m[Kvoid crp::cil::WorldAbstraction::staticMapFromServerCallback(autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/worldAbstraction.cpp:22:117:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   22 | void crp::cil::WorldAbstraction::staticMapFromServerCallback([01;35m[Kconst autoware_map_msgs::msg::LaneletMapBin::SharedPtr msg[m[K)
      |                                                              [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/egoAbstraction.cpp:[m[K In member function â€˜[01m[Kvoid crp::cil::EgoAbstraction::currentPoseCallback(geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/egoAbstraction.cpp:16:115:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   16 | void crp::cil::EgoAbstraction::currentPoseCallback([01;35m[Kconst geometry_msgs::msg::PoseWithCovarianceStamped::SharedPtr msg[m[K)
      |                                                    [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/egoAbstraction.cpp:[m[K In member function â€˜[01m[Kvoid crp::cil::EgoAbstraction::kinematicStateCallback(nav_msgs::msg::Odometry_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/egoAbstraction.cpp:23:96:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   23 | void crp::cil::EgoAbstraction::kinematicStateCallback([01;35m[Kconst nav_msgs::msg::Odometry::SharedPtr msg[m[K)
      |                                                       [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/include/prcp_sensor_abstraction/worldAbstraction.hpp:4[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/worldAbstraction.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (crp::cil::WorldAbstraction::*(crp::cil::WorldAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::WorldAbstraction::*(crp::cil::WorldAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::WorldAbstraction::*(crp::cil::WorldAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::WorldAbstraction::*(crp::cil::WorldAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::WorldAbstraction::*(crp::cil::WorldAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/worldAbstraction.cpp:6:96:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:21:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set_deprecated(std::function<void(std::shared_ptr<_Yp>)>) [with SetT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™ is deprecated: use 'void(std::shared_ptr<const MessageT>)' instead [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wdeprecated-declarations-Wdeprecated-declarations]8;;[m[K]
  391 |       [01;35m[Kset_deprecated(static_cast<typename scbth::callback_type>(callback))[m[K;
      |       [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:408:3:[m[K [01;36m[Knote: [m[Kdeclared here
  408 |   [01;36m[Kset_deprecated[m[K(std::function<void(std::shared_ptr<SetT>)> callback)
      |   [01;36m[K^~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/include/prcp_sensor_abstraction/egoAbstraction.hpp:4[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/egoAbstraction.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/egoAbstraction.cpp:6:98:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:21:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set_deprecated(std::function<void(std::shared_ptr<_Yp>)>) [with SetT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™ is deprecated: use 'void(std::shared_ptr<const MessageT>)' instead [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wdeprecated-declarations-Wdeprecated-declarations]8;;[m[K]
  391 |       [01;35m[Kset_deprecated(static_cast<typename scbth::callback_type>(callback))[m[K;
      |       [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:408:3:[m[K [01;36m[Knote: [m[Kdeclared here
  408 |   [01;36m[Kset_deprecated[m[K(std::function<void(std::shared_ptr<SetT>)> callback)
      |   [01;36m[K^~~~~~~~~~~~~~[m[K
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::EgoAbstraction::*(crp::cil::EgoAbstraction*, std::_Placeholder<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/egoAbstraction.cpp:8:79:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:21:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set_deprecated(std::function<void(std::shared_ptr<_Yp>)>) [with SetT = nav_msgs::msg::Odometry_<std::allocator<void> >; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™ is deprecated: use 'void(std::shared_ptr<const MessageT>)' instead [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wdeprecated-declarations-Wdeprecated-declarations]8;;[m[K]
  391 |       [01;35m[Kset_deprecated(static_cast<typename scbth::callback_type>(callback))[m[K;
      |       [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:408:3:[m[K [01;36m[Knote: [m[Kdeclared here
  408 |   [01;36m[Kset_deprecated[m[K(std::function<void(std::shared_ptr<SetT>)> callback)
      |   [01;36m[K^~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:214[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Geometry:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/BoundingBox.h:8[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/LineString.h:5[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/Lanelet.h:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRules.h:3[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRulesFactory.h:2[m[K,
                 from [01m[K/home/gfigneczi1/autoware/install/autoware_lanelet2_extension/include/autoware_lanelet2_extension/utility/message_conversion.hpp:29[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/include/prcp_sensor_abstraction/scenarioAbstraction.hpp:10[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/arch/NEON/PacketMath.h:[m[K In function â€˜[01m[KPacket Eigen::internal::pload(const typename Eigen::internal::unpacket_traits<T>::type*) [with Packet = Eigen::internal::eigen_packet_wrapper<int, 2>; typename Eigen::internal::unpacket_traits<T>::type = signed char][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/arch/NEON/PacketMath.h:1671:9:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid* memcpy(void*, const void*, size_t)[m[Kâ€™ copying an object of non-trivial type â€˜[01m[KEigen::internal::Packet4c[m[Kâ€™ {aka â€˜[01m[Kstruct Eigen::internal::eigen_packet_wrapper<int, 2>[m[Kâ€™} from an array of â€˜[01m[Kconst int8_t[m[Kâ€™ {aka â€˜[01m[Kconst signed char[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wclass-memaccess-Wclass-memaccess]8;;[m[K]
 1671 |   [01;35m[Kmemcpy(&res, from, sizeof(Packet4c))[m[K;
      |   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:172[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Geometry:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/BoundingBox.h:8[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/LineString.h:5[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/Lanelet.h:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRules.h:3[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRulesFactory.h:2[m[K,
                 from [01m[K/home/gfigneczi1/autoware/install/autoware_lanelet2_extension/include/autoware_lanelet2_extension/utility/message_conversion.hpp:29[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/include/prcp_sensor_abstraction/scenarioAbstraction.hpp:10[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/GenericPacketMath.h:159:8:[m[K [01;36m[Knote: [m[Kâ€˜[01m[KEigen::internal::Packet4c[m[Kâ€™ {aka â€˜[01m[Kstruct Eigen::internal::eigen_packet_wrapper<int, 2>[m[Kâ€™} declared here
  159 | struct [01;36m[Keigen_packet_wrapper[m[K
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:214[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Geometry:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/BoundingBox.h:8[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/LineString.h:5[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/Lanelet.h:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRules.h:3[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRulesFactory.h:2[m[K,
                 from [01m[K/home/gfigneczi1/autoware/install/autoware_lanelet2_extension/include/autoware_lanelet2_extension/utility/message_conversion.hpp:29[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/include/prcp_sensor_abstraction/scenarioAbstraction.hpp:10[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/arch/NEON/PacketMath.h:[m[K In function â€˜[01m[KPacket Eigen::internal::ploadu(const typename Eigen::internal::unpacket_traits<T>::type*) [with Packet = Eigen::internal::eigen_packet_wrapper<int, 2>; typename Eigen::internal::unpacket_traits<T>::type = signed char][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/arch/NEON/PacketMath.h:1716:9:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid* memcpy(void*, const void*, size_t)[m[Kâ€™ copying an object of non-trivial type â€˜[01m[KEigen::internal::Packet4c[m[Kâ€™ {aka â€˜[01m[Kstruct Eigen::internal::eigen_packet_wrapper<int, 2>[m[Kâ€™} from an array of â€˜[01m[Kconst int8_t[m[Kâ€™ {aka â€˜[01m[Kconst signed char[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wclass-memaccess-Wclass-memaccess]8;;[m[K]
 1716 |   [01;35m[Kmemcpy(&res, from, sizeof(Packet4c))[m[K;
      |   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:172[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Geometry:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/BoundingBox.h:8[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/LineString.h:5[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_core/primitives/Lanelet.h:11[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRules.h:3[m[K,
                 from [01m[K/opt/ros/humble/include/lanelet2_traffic_rules/TrafficRulesFactory.h:2[m[K,
                 from [01m[K/home/gfigneczi1/autoware/install/autoware_lanelet2_extension/include/autoware_lanelet2_extension/utility/message_conversion.hpp:29[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/include/prcp_sensor_abstraction/scenarioAbstraction.hpp:10[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/GenericPacketMath.h:159:8:[m[K [01;36m[Knote: [m[Kâ€˜[01m[KEigen::internal::Packet4c[m[Kâ€™ {aka â€˜[01m[Kstruct Eigen::internal::eigen_packet_wrapper<int, 2>[m[Kâ€™} declared here
  159 | struct [01;36m[Keigen_packet_wrapper[m[K
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:[m[K In member function â€˜[01m[Kvoid crp::cil::ScenarioAbstraction::staticMapFromFileCallback(autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:18:118:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   18 | void crp::cil::ScenarioAbstraction::staticMapFromFileCallback([01;35m[Kconst autoware_map_msgs::msg::LaneletMapBin::SharedPtr msg[m[K)
      |                                                               [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:[m[K In member function â€˜[01m[Kvoid crp::cil::ScenarioAbstraction::currentPoseCallback(geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:25:120:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   25 | void crp::cil::ScenarioAbstraction::currentPoseCallback([01;35m[Kconst geometry_msgs::msg::PoseWithCovarianceStamped::SharedPtr msg[m[K)
      |                                                         [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/include/prcp_sensor_abstraction/scenarioAbstraction.hpp:4[m[K,
                 from [01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:6:96:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:21:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set_deprecated(std::function<void(std::shared_ptr<_Yp>)>) [with SetT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; MessageT = autoware_map_msgs::msg::LaneletMapBin_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™ is deprecated: use 'void(std::shared_ptr<const MessageT>)' instead [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wdeprecated-declarations-Wdeprecated-declarations]8;;[m[K]
  391 |       [01;35m[Kset_deprecated(static_cast<typename scbth::callback_type>(callback))[m[K;
      |       [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:408:3:[m[K [01;36m[Knote: [m[Kdeclared here
  408 |   [01;36m[Kset_deprecated[m[K(std::function<void(std::shared_ptr<SetT>)> callback)
      |   [01;36m[K^~~~~~~~~~~~~~[m[K
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (crp::cil::ScenarioAbstraction::*(crp::cil::ScenarioAbstraction*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/gfigneczi1/ros2_ws/src/CooperativeResearchPlatform/crp_CIL/prcp_sensor_abstraction/src/scenarioAbstraction.cpp:9:98:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:21:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set_deprecated(std::function<void(std::shared_ptr<_Yp>)>) [with SetT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; MessageT = geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™ is deprecated: use 'void(std::shared_ptr<const MessageT>)' instead [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wdeprecated-declarations-Wdeprecated-declarations]8;;[m[K]
  391 |       [01;35m[Kset_deprecated(static_cast<typename scbth::callback_type>(callback))[m[K;
      |       [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:408:3:[m[K [01;36m[Knote: [m[Kdeclared here
  408 |   [01;36m[Kset_deprecated[m[K(std::function<void(std::shared_ptr<SetT>)> callback)
      |   [01;36m[K^~~~~~~~~~~~~~[m[K
